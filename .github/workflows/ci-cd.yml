name: Portfolio CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  pipeline:
    runs-on: ubuntu-latest
    
    steps:
    # SETUP STAGE
    - name: ðŸš€ Setup - Checkout code
      uses: actions/checkout@v4

    - name: ðŸš€ Setup - Node.js Environment
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: ðŸš€ Setup - Install Dependencies
      run: npm install

    - name: ðŸš€ Setup - Build Site
      run: npm run build

    - name: ðŸš€ Setup - Cache Dependencies
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

    # VALIDATION STAGE
    - name: âœ… Validate - HTML Structure
      run: npx html-validate _site/index.html || exit 1

    - name: âœ… Validate - JavaScript Code
      run: npx eslint js/*.js || exit 1

    - name: âœ… Validate - CSS Styles
      run: find css/ -name "*.css" -exec npx w3c-css-validator {} \; || exit 1

    - name: âœ… Validate - Link Integrity
      run: npx blc http://localhost:3000 --recursive --exclude-external || exit 1

    - name: âœ… Validate - Accessibility Standards
      run: node scripts/accessibility-test.js || exit 1

    - name: âœ… Validate - Performance Metrics
      run: npx lhci autorun --config .lighthouserc.json || exit 1

    - name: âœ… Validate - Security Scan
      run: node scripts/security-scan.js || exit 1

    - name: âœ… Validate - Image Optimization
      run: node scripts/image-check.js || exit 1

    - name: âœ… Validate - SEO Requirements
      run: node scripts/seo-check.js || exit 1

    - name: âœ… Validate - Dependencies Security
      run: npm audit --audit-level=high || exit 1

    - name: âœ… Validate - Bundle Size
      run: |
        BUNDLE_SIZE=$(du -sb _site | cut -f1)
        if [ $BUNDLE_SIZE -gt 10485760 ]; then echo "Bundle too large: $BUNDLE_SIZE bytes" && exit 1; fi

    # DEPLOYMENT STAGE (only on main branch)
    - name: ðŸš¢ Deploy - GitHub Pages
      if: github.ref == 'refs/heads/main' && success()
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./_site

    - name: ðŸš¢ Deploy - Notify Success
      if: github.ref == 'refs/heads/main' && success()
      run: echo "âœ… Deployment successful to https://${{ github.repository_owner }}.github.io/portfolio/"

    # CLEANUP STAGE (always runs)
    - name: ðŸ§¹ Cleanup - Remove Build Artifacts
      if: always()
      run: |
        rm -rf node_modules/.cache
        rm -rf _site
        npm cache clean --force

    - name: ðŸ§¹ Cleanup - Clear Temporary Files
      if: always()
      run: |
        find . -name "*.tmp" -delete
        find . -name "*.log" -delete